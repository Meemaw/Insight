<?xml version="1.0"?>
<ruleset name="Insight Rules"
  xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

  <description>
    Insight rules
  </description>

  <rule ref="category/java/bestpractices.xml/AccessorClassGeneration"/>
  <rule ref="category/java/bestpractices.xml/AccessorMethodGeneration"/>
  <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly"/>
  <rule ref="category/java/bestpractices.xml/AvoidMessageDigestField"/>
  <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace"/>
  <rule ref="category/java/bestpractices.xml/AvoidReassigningLoopVariables"/>
  <rule ref="category/java/bestpractices.xml/AvoidReassigningParameters"/>
  <rule ref="category/java/bestpractices.xml/AvoidStringBufferField"/>
  <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP"/>
  <rule ref="category/java/bestpractices.xml/CheckResultSet"/>
  <rule ref="category/java/bestpractices.xml/ConstantsInInterface"/>
  <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt"/>
  <rule ref="category/java/bestpractices.xml/DoubleBraceInitialization"/>
  <rule ref="category/java/bestpractices.xml/ForLoopCanBeForeach"/>
  <rule ref="category/java/bestpractices.xml/ForLoopVariableCount"/>
  <rule ref="category/java/bestpractices.xml/GuardLogStatement"/>
  <rule ref="category/java/bestpractices.xml/JUnitTestContainsTooManyAsserts">
    <properties>
      <property name="maximumAsserts" value="10"/>
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/LooseCoupling"/>
  <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray"/>
  <rule ref="category/java/bestpractices.xml/MissingOverride"/>
  <rule ref="category/java/bestpractices.xml/OneDeclarationPerLine"/>
  <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInCaseInsensitiveComparisons"/>
  <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInComparisons"/>
  <rule ref="category/java/bestpractices.xml/PreserveStackTrace"/>
  <rule ref="category/java/bestpractices.xml/ReplaceEnumerationWithIterator"/>
  <rule ref="category/java/bestpractices.xml/ReplaceHashtableWithMap"/>
  <rule ref="category/java/bestpractices.xml/ReplaceVectorWithList"/>
  <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault"/>
  <rule ref="category/java/bestpractices.xml/SystemPrintln"/>
  <rule ref="category/java/bestpractices.xml/UnusedFormalParameter"/>
  <rule ref="category/java/bestpractices.xml/UnusedImports"/>
  <rule ref="category/java/bestpractices.xml/UnusedLocalVariable"/>
  <rule ref="category/java/bestpractices.xml/UnusedPrivateField"/>
  <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod"/>
  <rule ref="category/java/bestpractices.xml/UseAssertEqualsInsteadOfAssertTrue"/>
  <rule ref="category/java/bestpractices.xml/UseAssertNullInsteadOfAssertTrue"/>
  <rule ref="category/java/bestpractices.xml/UseAssertSameInsteadOfAssertTrue"/>
  <rule ref="category/java/bestpractices.xml/UseAssertTrueInsteadOfAssertEquals"/>
  <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty"/>
  <rule ref="category/java/bestpractices.xml/UseTryWithResources"/>
  <rule ref="category/java/bestpractices.xml/UseVarargs"/>
  <rule ref="category/java/bestpractices.xml/WhileLoopWithLiteralBoolean"/>

  <rule ref="category/java/codestyle.xml/AvoidDollarSigns"/>
  <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass"/>
  <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending"/>
  <rule ref="category/java/codestyle.xml/AvoidUsingNativeCode"/>
  <rule ref="category/java/codestyle.xml/BooleanGetMethodName"/>
  <rule ref="category/java/codestyle.xml/CallSuperInConstructor"/>
  <rule ref="category/java/codestyle.xml/ConfusingTernary"/>
  <rule ref="category/java/codestyle.xml/ControlStatementBraces"/>
  <rule ref="category/java/codestyle.xml/DontImportJavaLang"/>
  <rule ref="category/java/codestyle.xml/DuplicateImports"/>
  <rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract"/>
  <rule ref="category/java/codestyle.xml/ExtendsObject"/>
  <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass"/>
  <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop"/>
  <rule ref="category/java/codestyle.xml/IdenticalCatchBranches"/>
  <rule ref="category/java/codestyle.xml/NoPackage"/>
  <rule ref="category/java/codestyle.xml/PackageCase"/>
  <rule ref="category/java/codestyle.xml/PrematureDeclaration"/>
  <rule ref="category/java/codestyle.xml/ShortMethodName">
    <properties>
      <property name="minimum" value="2"/>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ShortVariable">
    <properties>
      <property name="minimum" value="2"/>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/UnnecessaryAnnotationValueElement"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryConstructor"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryModifier"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryReturn"/>
  <rule ref="category/java/codestyle.xml/UseDiamondOperator"/>
  <rule ref="category/java/codestyle.xml/UselessQualifiedThis"/>
  <rule ref="category/java/codestyle.xml/UseShortArrayInitializer"/>

  <rule ref="category/java/design.xml/AvoidCatchingGenericException"/>
  <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts"/>
  <rule ref="category/java/design.xml/AvoidRethrowingException"/>
  <rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException"/>
  <rule ref="category/java/design.xml/AvoidThrowingNullPointerException"/>
  <rule ref="category/java/design.xml/AvoidUncheckedExceptionsInSignatures"/>
  <rule ref="category/java/design.xml/CollapsibleIfStatements"/>
  <rule ref="category/java/design.xml/CyclomaticComplexity"/>
  <rule ref="category/java/design.xml/ExcessiveParameterList"/>
  <rule ref="category/java/design.xml/ExcessivePublicCount"/>
  <rule ref="category/java/design.xml/GodClass"/>
  <rule ref="category/java/design.xml/ImmutableField"/>
  <rule ref="category/java/design.xml/LogicInversion"/>
  <rule ref="category/java/design.xml/SignatureDeclareThrowsException"/>
  <rule ref="category/java/design.xml/SimplifiedTernary"/>
  <rule ref="category/java/design.xml/SimplifyBooleanAssertion"/>
  <rule ref="category/java/design.xml/SimplifyBooleanExpressions"/>
  <rule ref="category/java/design.xml/SimplifyBooleanReturns"/>
  <rule ref="category/java/design.xml/SimplifyConditional"/>
  <rule ref="category/java/design.xml/SingularField"/>
  <rule ref="category/java/design.xml/UselessOverridingMethod"/>

  <rule ref="category/java/performance.xml/AddEmptyString"/>
  <rule ref="category/java/performance.xml/AppendCharacterWithChar"/>
  <rule ref="category/java/performance.xml/AvoidArrayLoops"/>
  <rule ref="category/java/performance.xml/AvoidFileStream"/>
  <rule ref="category/java/performance.xml/AvoidUsingShortType"/>
  <rule ref="category/java/performance.xml/BigIntegerInstantiation"/>
  <rule ref="category/java/performance.xml/BooleanInstantiation"/>
  <rule ref="category/java/performance.xml/ByteInstantiation"/>
  <rule ref="category/java/performance.xml/ConsecutiveAppendsShouldReuse"/>
  <rule ref="category/java/performance.xml/ConsecutiveLiteralAppends"/>
  <rule ref="category/java/performance.xml/InefficientEmptyStringCheck"/>
  <rule ref="category/java/performance.xml/InefficientStringBuffering"/>
  <rule ref="category/java/performance.xml/InsufficientStringBufferDeclaration"/>
  <rule ref="category/java/performance.xml/IntegerInstantiation"/>
  <rule ref="category/java/performance.xml/LongInstantiation"/>
  <rule ref="category/java/performance.xml/OptimizableToArrayCall"/>
  <rule ref="category/java/performance.xml/RedundantFieldInitializer"/>
  <rule ref="category/java/performance.xml/ShortInstantiation"/>
  <rule ref="category/java/performance.xml/SimplifyStartsWith"/>
  <rule ref="category/java/performance.xml/StringInstantiation"/>
  <rule ref="category/java/performance.xml/StringToString"/>
  <rule ref="category/java/performance.xml/TooFewBranchesForASwitchStatement"/>
  <rule ref="category/java/performance.xml/UnnecessaryWrapperObjectCreation"/>
  <rule ref="category/java/performance.xml/UseArrayListInsteadOfVector"/>
  <rule ref="category/java/performance.xml/UseArraysAsList"/>
  <rule ref="category/java/performance.xml/UseIndexOfChar"/>
  <rule ref="category/java/performance.xml/UselessStringValueOf"/>
  <rule ref="category/java/performance.xml/UseStringBufferForStringAppends"/>
  <rule ref="category/java/performance.xml/UseStringBufferLength"/>

</ruleset>