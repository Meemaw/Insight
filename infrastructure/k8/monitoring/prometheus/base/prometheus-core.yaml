---
apiVersion: v1
kind: Namespace
metadata:
  name: prometheus
  labels:
    team: infrastructure
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: prometheus
  labels:
    team: infrastructure
spec:
  serviceName: prometheus
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      # Need this to give access to the persistent volume.
      # See comments by @antoineco and @hobti01 at https://github.com/kubernetes/kubernetes/issues/2630
      securityContext:
        fsGroup: 1000
      containers:
        - name: prometheus
          image: quay.io/prometheus/prometheus:v2.16.0
          args:
            - '--storage.tsdb.retention.time=14d'
            - '--storage.tsdb.path=/var/prometheus/data'
            - '--storage.tsdb.max-block-duration=2h'
            - '--storage.tsdb.min-block-duration=2h'
            - '--config.file=/etc/prometheus/shared/prometheus.yaml'
            - '--web.route-prefix=/'
            - '--web.enable-lifecycle'
          ports:
            - name: web
              containerPort: 9090
              protocol: TCP
          resources:
            limits:
              cpu: '4'
              memory: 15Gi
            requests:
              cpu: '2'
              memory: 4Gi
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/shared
              readOnly: true
            - name: prometheus-data
              mountPath: /var/prometheus/data
              subPath: prometheus-db
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 3
        - name: rules-reloader
          image: quay.io/coreos/configmap-reload:v0.0.1
          args:
            - -webhook-url=http://localhost:9090/-/reload
            - -volume-dir=/etc/prometheus/rules
            - -volume-dir=/etc/prometheus/shared
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
            limits:
              cpu: 5m
              memory: 10Mi
          volumeMounts:
            - name: prometheus-rules
              mountPath: /etc/prometheus/rules
              readOnly: true
            - name: prometheus-config
              mountPath: /etc/prometheus/shared
              readOnly: true
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-rules
          configMap:
            name: prometheus-rules
            optional: true
  volumeClaimTemplates:
    - metadata:
        name: prometheus-data
      spec:
        accessModes: ['ReadWriteOnce']
        resources:
          requests:
            storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: prometheus
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9090
      targetPort: 9090
  selector:
    app: prometheus
