on:
  push:
    paths-ignore:
      - 'infrastructure/**'
      - '.vscode/**'
      - '.gitignore'
      - 'README.md'

jobs:
  lint_test_build:
    name: Lint, Test & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: intall, lint and unit test
        run: |
          yarn install
          yarn lint
          yarn test:coverage
        env:
          CI: true
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: browser
      - name: build
        run: |
          yarn build
      - uses: actions/upload-artifact@v1
        with:
          name: s
          path: frontend/browser/tracking/dist

  e2e:
    name: E2E tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: backend | docker-compose up
        run: |
          docker-compose -f backend/local-test-services/docker-compose.yml up -d auth-service
        env:
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: frontend/app | install & build & start & test:e2e
        run: |
          yarn install
          yarn workspace @insight/app build
          yarn workspace @insight/app start &
          node_modules/wait-on/bin/wait-on http-get://localhost:3000 --timeout 60000
          xvfb-run --server-args="-screen 0 1280x720x24" yarn workspace @insight/app test:e2e

  deploy:
    name: Deploy scripts to CDN
    runs-on: ubuntu-latest
    needs: [lint_test_build, e2e]
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v1
        with:
          name: s
          path: deployment/s
      - name: Prepare files for deployment
        run: |
          mv deployment/s/insight.js.gz deployment/s/insight.js
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete --content-encoding gzip
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: 'deployment'
