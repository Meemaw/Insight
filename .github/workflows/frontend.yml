on:
  push:
    paths-ignore:
      - 'infrastructure/**'
      - '.vscode/**'
      - '.gitignore'
      - 'README.md'

jobs:
  lint_test_build:
    name: Lint, Test & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: intall, lint and unit test
        run: |
          yarn install
          yarn lint
          xvfb-run --auto-servernum yarn test:coverage
        env:
          CI: true
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: browser
      - name: build
        run: |
          yarn build
      - uses: actions/upload-artifact@v1
        with:
          name: s
          path: frontend/browser/tracking/dist

  e2e:
    name: E2E tests
    runs-on: ubuntu-latest
    env:
      APP_TESTCAFE_ARTIFACTS_PATH: frontend/app/artifacts/testcafe
    services:
      db:
        image: postgres:11
        ports: 5432:5432
        env:
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: postgres

    steps:
      - uses: actions/checkout@master
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v1
        with:
          java-version: 13
      - uses: eskatos/gradle-command-action@v1
        with:
          arguments: auth-service:quarkusBuild --uber-jar
          build-root-directory: backend
          wrapper-directory: backend
      - name: Run auth-service
        run: |
          mkdir -p $APP_TESTCAFE_ARTIFACTS_PATH
          java -jar backend/auth-service/build/auth-service-1.0-runner.jar 2>&1 | tee $APP_TESTCAFE_ARTIFACTS_PATH/auth-service.log &
        env:
          - GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

  deploy:
    name: Deploy scripts to CDN
    runs-on: ubuntu-latest
    needs: [lint_test_build, e2e]
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v1
        with:
          name: s
          path: deployment/s
      - name: Prepare files for deployment
        run: |
          mv deployment/s/insight.js.gz deployment/s/insight.js
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete --content-encoding gzip
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: 'deployment'
