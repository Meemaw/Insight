on:
  push:
    paths:
      - '.github/workflows/frontend:browser:bootstrap.yml'
      - 'frontend/browser/bootstrap/**'
      - 'jest.config.js'
      - 'lerna.json'
      - 'package.json'
      - 'tsconfig.json'
      - 'yarn.lock'

env:
  CI: true

jobs:
  unit_tests_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install libgbm-dev xvfb
      - name: intall and unit test
        run: |
          yarn install
          xvfb-run --auto-servernum yarn workspace @insight/browser-bootstrap test --coverage
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend:browser:bootstrap
      - name: build
        run: |
          yarn build
      - uses: actions/upload-artifact@v1
        with:
          name: s
          path: frontend/browser/bootstrap/dist

  deploy:
    runs-on: ubuntu-latest
    needs: [unit_tests_build]
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v1
        with:
          name: s
          path: deployment/s
      - name: Prepare files for deployment
        run: |
          mv deployment/s/index.js deployment/s/bootstrap.js
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete --content-encoding gzip
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: 'deployment'
